{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maxkl\\\\Desktop\\\\sender\\\\sender\\\\client\\\\src\\\\LoginWithDiscord.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginWithDiscord = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  useEffect(() => {\n    const code = searchParams.get('code');\n    if (code) {\n      // Send the code to your backend\n      fetch('http://localhost:5000/api/exchange-token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code\n        })\n      }).then(res => res.json()).then(data => {\n        console.log('Token exchange response:', data);\n        // Handle access token here (e.g., save it in context or localStorage)\n      }).catch(err => {\n        console.error('Error exchanging token:', err);\n      });\n    }\n  }, [searchParams]);\n\n  // The login button to redirect user to Discord\n  const handleLogin = () => {\n    const clientId = '661372100673536013';\n    const redirectUri = encodeURIComponent('http://localhost:3000/callback');\n    const scope = encodeURIComponent('identify guilds');\n    const discordUrl = `https://discord.com/api/oauth2/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=code&scope=${scope}`;\n    window.location.href = discordUrl;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login with Discord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginWithDiscord, \"Vr8ywHSj7XLtnLkrJxRpkjH85wI=\", false, function () {\n  return [useSearchParams];\n});\n_c = LoginWithDiscord;\nexport default LoginWithDiscord;\nvar _c;\n$RefreshReg$(_c, \"LoginWithDiscord\");","map":{"version":3,"names":["React","useEffect","useSearchParams","jsxDEV","_jsxDEV","LoginWithDiscord","_s","searchParams","code","get","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","catch","err","error","handleLogin","clientId","redirectUri","encodeURIComponent","scope","discordUrl","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/maxkl/Desktop/sender/sender/client/src/LoginWithDiscord.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nconst LoginWithDiscord = () => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    const code = searchParams.get('code');\r\n    if (code) {\r\n      // Send the code to your backend\r\n      fetch('http://localhost:5000/api/exchange-token', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ code }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log('Token exchange response:', data);\r\n          // Handle access token here (e.g., save it in context or localStorage)\r\n        })\r\n        .catch((err) => {\r\n          console.error('Error exchanging token:', err);\r\n        });\r\n    }\r\n  }, [searchParams]);\r\n\r\n  // The login button to redirect user to Discord\r\n  const handleLogin = () => {\r\n    const clientId = '661372100673536013';\r\n    const redirectUri = encodeURIComponent('http://localhost:3000/callback');\r\n    const scope = encodeURIComponent('identify guilds');\r\n    const discordUrl = `https://discord.com/api/oauth2/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=code&scope=${scope}`;\r\n    window.location.href = discordUrl;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login with Discord</h1>\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginWithDiscord;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,CAAC,GAAGL,eAAe,CAAC,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMO,IAAI,GAAGD,YAAY,CAACE,GAAG,CAAC,MAAM,CAAC;IACrC,IAAID,IAAI,EAAE;MACR;MACAE,KAAK,CAAC,0CAA0C,EAAE;QAChDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAK,CAAC;MAC/B,CAAC,CAAC,CACCQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,IAAI,CAAC;QAC7C;MACF,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAK;QACdH,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAED,GAAG,CAAC;MAC/C,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAAChB,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAG,oBAAoB;IACrC,MAAMC,WAAW,GAAGC,kBAAkB,CAAC,gCAAgC,CAAC;IACxE,MAAMC,KAAK,GAAGD,kBAAkB,CAAC,iBAAiB,CAAC;IACnD,MAAME,UAAU,GAAG,sDAAsDJ,QAAQ,iBAAiBC,WAAW,6BAA6BE,KAAK,EAAE;IACjJE,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGH,UAAU;EACnC,CAAC;EAED,oBACE1B,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlC,OAAA;MAAQmC,OAAO,EAAEd,WAAY;MAAAS,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAChC,EAAA,CAtCID,gBAAgB;EAAA,QACGH,eAAe;AAAA;AAAAsC,EAAA,GADlCnC,gBAAgB;AAwCtB,eAAeA,gBAAgB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}